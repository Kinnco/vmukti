<UserControl x:Class="PredictivDialer.Presentation.PredictiveDialer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" MinHeight="30" MinWidth="268" Margin="5,5,5,5" 
    VerticalAlignment="Top">
           <UserControl.Resources>
	 	<!-- Resource dictionary entries should be defined here. -->
		
		
		<!-- Brushes : These are used to define the color for background, foreground, selection, enabled etc of all controls
	
	If you want to change the color of a control you can just chnage the brush; if you want to add a new shape or change arrangement then also edit the template -->
		
		<!-- Brush Set 01 (Normal Brushes)-->
		
		
		<LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDEDEDE" Offset="0.0"/>
			<GradientStop Color="#FF6E6E6E" Offset="1.0"/>
		</LinearGradientBrush>

		<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
		<LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFB4B4B4" Offset="0.0"/>
			<GradientStop Color="#FF000000" Offset="1.0"/>
		</LinearGradientBrush>

		<!-- PressedBrush is used for Pressed in Button, Radio Button, CheckBox -->
		<LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#BBB" Offset="0.0"/>
			<GradientStop Color="#FFC4C2C2" Offset="0.1"/>
			<GradientStop Color="#FFAFAAAA" Offset="0.9"/>
			<GradientStop Color="#FFB2AFAF" Offset="1.0"/>
		</LinearGradientBrush>

		<!-- LightBrush is used for content areas such as Menu, Tab Control background -->
		<LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFFFFFFF" Offset="0.0"/>
			<GradientStop Color="#FFA39C9C" Offset="1.0"/>
		</LinearGradientBrush>

		<!-- MouseOverBrush is used for MouseOver in Button, Radio Button, CheckBox -->
		<LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFF7F3F3" Offset="0.0"/>
			<GradientStop Color="#FF3D3B3B" Offset="1.0"/>
		</LinearGradientBrush>

		<LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#444" Offset="0.0"/>
			<GradientStop Color="#FF545454" Offset="1.0"/>
		</LinearGradientBrush>

		<!-- Disabled Brushes are used for the Disabled look of each control -->
		<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FF585757"/>

		<!-- SelectedBackgroundBrush is used for the Selected item in ListBoxItem, ComboBoxItem-->
		<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FF8F8989"/>

		<SolidColorBrush x:Key="DisabledBorderBrush" Color="#FF9B9696"/>

		<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FFB8B8B8"/>


		<!-- Style and Template pairs are used to define each control Part -->
		<!-- The Style provides default values on the control; the Template gives the elements for each control -->

	<LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF454545" Offset="0"/>
		<GradientStop Color="#FF161616" Offset="1"/>
	</LinearGradientBrush>

		<!-- DefaultedBorderBrush is used to show KeyBoardFocus -->
		<LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#777" Offset="0.0"/>
			<GradientStop Color="#000" Offset="1.0"/>
		</LinearGradientBrush>

		<SolidColorBrush x:Key="SolidBorderBrush" Color="#FF313030"/>
		<SolidColorBrush x:Key="LightColorBrush" Color="#FFB1B1B1"/>

		<SolidColorBrush x:Key="LightBorderBrush" Color="#FFAFADAD"/>

		<!-- Used for Checkmark, Radio button, TreeViewItem, Expander ToggleButton glyphs -->
		
		
		<!-- Brush Set 02 -->
		
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF919090"/>
	<SolidColorBrush x:Key="TransBackGround" Color="#00000000"/>
	<SolidColorBrush x:Key="TransBorder" Color="#00000000"/>
	<SolidColorBrush x:Key="BlackColorBrush" Color="#FF000000"/>
	<SolidColorBrush x:Key="GrayColorBrush" Color="#FF505050"/>
	<SolidColorBrush x:Key="OpacityNoMask" Color="#FF000000"/>
	
	<DrawingBrush x:Key="OpacityGlowCenter" Viewbox="0,0,60,60" ViewboxUnits="Absolute">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.OpacityMask>
					<RadialGradientBrush>
						<GradientStop Color="#FF000000" Offset="0"/>
						<GradientStop Color="#00FFFFFF" Offset="1"/>
					</RadialGradientBrush>
				</DrawingGroup.OpacityMask>
				<GeometryDrawing Brush="#FFFFFFFF">
					<GeometryDrawing.Geometry>
						<RectangleGeometry RadiusX="0" RadiusY="0" Rect="0.5,0.5,59,59"/>
					</GeometryDrawing.Geometry>
					<GeometryDrawing.Pen>
						<Pen Brush="#FF000000" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
					</GeometryDrawing.Pen>
				</GeometryDrawing>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>
	
	<DrawingBrush x:Key="OpacityLowGlowCenter" Viewbox="0,0,60,60" ViewboxUnits="Absolute">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.OpacityMask>
					<RadialGradientBrush>
						<GradientStop Color="#FFFFFFFF" Offset="0"/>
						<GradientStop Color="#44A1A1A1" Offset="0.2"/>
						<GradientStop Color="#00FFFFFF" Offset="1"/>
					</RadialGradientBrush>
				</DrawingGroup.OpacityMask>
				<GeometryDrawing Brush="#FFFFFFFF">
					<GeometryDrawing.Geometry>
						<RectangleGeometry RadiusX="0" RadiusY="0" Rect="0.5,0.5,59,59"/>
					</GeometryDrawing.Geometry>
					<GeometryDrawing.Pen>
						<Pen Brush="#FF000000" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
					</GeometryDrawing.Pen>
				</GeometryDrawing>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>
	
	<DrawingBrush x:Key="OpacityGlowBottom" Viewbox="0,0,60,60" ViewboxUnits="Absolute">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.OpacityMask>
					<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
						<GradientStop Color="#FF000000" Offset="0"/>
						<GradientStop Color="#00FFFFFF" Offset="1"/>
						<GradientStop Color="#4CA1A1A1" Offset="0.4"/>
					</LinearGradientBrush>
				</DrawingGroup.OpacityMask>
				<GeometryDrawing Brush="#FFFFFFFF">
					<GeometryDrawing.Geometry>
						<RectangleGeometry RadiusX="0" RadiusY="0" Rect="0,0,60,60"/>
					</GeometryDrawing.Geometry>
					<GeometryDrawing.Pen>
						<Pen Brush="#FF000000" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="0"/>
					</GeometryDrawing.Pen>
				</GeometryDrawing>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>	
<Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
			<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
			<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource LightBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">

						<!-- We use Grid as a root because it is easy to add more elements to customize the button -->
						<Grid x:Name="Grid">
							<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>

							<!-- Content Presenter is where the text content etc is placed by the control -->
							<!-- The bindings are useful so that the control can be parameterized without editing the template -->
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</Grid>

						<!--Each state sets a brush on the Border in the template -->
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SimpleButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1.2" StrokeDashArray="1 1"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	</UserControl.Resources>
	
    <Canvas Name="cnvMain" InkCanvas.Left="0" Width="255" Height="30">
		<Button Name="btnManualDial" Canvas.Left="2" Canvas.Top="5" Width="120" Height="20" Content="Start Manual Dialing" ></Button>
		<Button Name="btnPredictiveDial" Canvas.Left="130" Canvas.Top="5" Width="120" Height="20" Content="Start Predictive Dialing" ></Button>
    </Canvas>
</UserControl>
