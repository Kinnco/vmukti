<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Resource dictionary entries should be defined here. -->
	
	<Style x:Key="CallButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource CallBtnGreenBase}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Tag" Value="Free"/>
					<Condition Property="IsMouseOver" Value="true"/>
				</MultiTrigger.Conditions>
					<Setter TargetName="Border" Property="Background" Value="{DynamicResource CallBtnGreenMouseOver}" />
				  	<Setter TargetName="Border" Property="BitmapEffect">
				  	<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FF00FF00" GlowSize="5" Opacity="0.75"/>
					</Setter.Value>
			  		</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Tag" Value="Running"/>
					<Condition Property="IsMouseOver" Value="true"/>
				</MultiTrigger.Conditions>
					<Setter TargetName="Border" Property="Background" Value="{DynamicResource CallBtnRedOver}" />
				  	<Setter TargetName="Border" Property="BitmapEffect">
				  	<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FFFF0000" GlowSize="5" Opacity="0.75"/>
					</Setter.Value>
			  		</Setter>
			</MultiTrigger>            
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Tag" Value="Free"/>
					<Condition Property="IsPressed" Value="true"/>
				</MultiTrigger.Conditions>
					<Setter TargetName="Border" Property="Background" Value="{DynamicResource CallBtnGreenPressed}" />
				  	<Setter TargetName="Border" Property="BitmapEffect">
				  	<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FF00FF00" GlowSize="5" Opacity="0.75"/>
					</Setter.Value>
			  		</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Tag" Value="Running"/>
					<Condition Property="IsPressed" Value="true"/>
				</MultiTrigger.Conditions>
					<Setter TargetName="Border" Property="Background" Value="{DynamicResource CallBtnRedPressed}" />
				  	<Setter TargetName="Border" Property="BitmapEffect">
				  	<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="#FFFF0000" GlowSize="5" Opacity="0.75"/>
					</Setter.Value>
			  		</Setter>
			</MultiTrigger>  		    
			
        <!--<Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
            </Trigger>
            

            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>-->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Tag" Value="Running"/>
                <Condition Property="IsMouseOver" Value="false"/>
                <Condition Property="IsPressed" Value="false"/>
              </MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource CallBtnRedNormal}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Tag" Value="Free"/>
                <Condition Property="IsMouseOver" Value="false"/>
                <Condition Property="IsPressed" Value="false"/>
              </MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource CallBtnGreenBase}" />
            </MultiTrigger>
            <!--<MultiTrigger>
			  <MultiTrigger.Conditions>
				<Condition Property="Tag" Value="Hold"/>
				<Condition Property="IsMouseOver" Value="false"/>
				<Condition Property="IsPressed" Value="false"/>
			  </MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource RedBaseBrush}" />
			</MultiTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    <Style x:Key="CloseButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource CloseButtonBase}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource CloseButtonMouseOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource CloseButtonPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    <Style x:Key="MinButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource MinButtonNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MinButtonOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MinButtonPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style> 
    <Style x:Key="NumButtons" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Foreground" Value ="Black"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource NumPadBase}">
            <ContentPresenter 
              Margin="1,1,1,1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource NumPadOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource NumPadPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    <Style x:Key="SimpleButtons" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Foreground" Value="White"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource SimpleButtonNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource SimpleButtonOver}" />
			  <Setter Property="Foreground" Value="Black"/>
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource SimpleButtonPressed}" />
			  <Setter Property="Foreground" Value="White"/>
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>		
    <Style x:Key="ButtonButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource ButtonButtonBase}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonButtonOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonButtonPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style> 
  <Style x:Key="VidButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource SingleVidNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource SingleVidOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource SingleVidPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ChatButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource ChatNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChatOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChatPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style> 
   <Style x:Key="ConfButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource ConfNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ConfOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ConfPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style> 
   <Style x:Key="AddButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource AddNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AddOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AddPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style> 
  <Style x:Key="AddAccountButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource AddAccountNormal}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AddAccountOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AddAccountPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BuddyListButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource BuddyListBtnBase}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBuddyListOver}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBuddyListPressed}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>  
<Style x:Key="StatusButton" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{DynamicResource GreenMan}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource GreenMan}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FF00FF00" GlowSize="5" Opacity="0.75"/>
				</Setter.Value>
			  </Setter>
            </Trigger>
		    <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource GreenMan}" />
			  <Setter TargetName="Border" Property="BitmapEffect">
			  	<Setter.Value>
					<OuterGlowBitmapEffect GlowColor="#FF80FF80" GlowSize="1" Opacity="0.75"/>
				</Setter.Value>	
			  </Setter>		  
            </Trigger>			
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>	
     <!-- SimpleStyles: ListBox -->
  <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBox">
          <Border 
            Name="Border" 
            Background="{DynamicResource ListBackground}"
            CornerRadius="2"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer 
              Margin="0"
              Focusable="false">
              <StackPanel Margin="2" IsItemsHost="True" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background"
                      Value="{DynamicResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush"
                      Value="{DynamicResource DisabledBorderBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- SimpleStyles: ListBoxItem -->
  <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FontSize" Value="12px"/>
	<Setter Property="Foreground" Value="White"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border 
            Name="Border"
            Padding="2"
            SnapsToDevicePixels="true">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background"
                      Value="{DynamicResource RoundTextBack}"/>
			  <Setter Property="Foreground" Value="Black"/>	
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		    <Setter Property="SnapsToDevicePixels" Value="True"/>
		    <Setter Property="OverridesDefaultStyle" Value="true"/>
		    <Setter Property="Focusable" Value="false"/>
		    <Setter Property="Template">
		      <Setter.Value>
		        <ControlTemplate TargetType="{x:Type RepeatButton}">
		          <Border 
		            Name="Border"
		            Margin="1" 
		            CornerRadius="1" 
		            Background="{DynamicResource NormalBrush}"
		            BorderBrush="{DynamicResource NormalBorderBrush}"
		            BorderThickness="1">
		            <Path 
		              HorizontalAlignment="Center"
		              VerticalAlignment="Center"
		              Fill="{DynamicResource LightBrush}"
		              Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
		          </Border>
		          <ControlTemplate.Triggers>
		            <Trigger Property="IsPressed" Value="true">
		              <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
		            </Trigger>
		            <Trigger Property="IsEnabled" Value="false">
		              <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
		            </Trigger>
		          </ControlTemplate.Triggers>
		        </ControlTemplate>
		      </Setter.Value>
		    </Setter>
		  </Style>	
		  <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		    <Setter Property="SnapsToDevicePixels" Value="True"/>
		    <Setter Property="OverridesDefaultStyle" Value="true"/>
		    <Setter Property="IsTabStop" Value="false"/>
		    <Setter Property="Focusable" Value="false"/>
		    <Setter Property="Template">
		      <Setter.Value>
		        <ControlTemplate TargetType="{x:Type RepeatButton}">
		          <Border Background="Transparent" />
		        </ControlTemplate>
		      </Setter.Value>
		    </Setter>
		  </Style>
		  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		    <Setter Property="SnapsToDevicePixels" Value="True"/>
		    <Setter Property="OverridesDefaultStyle" Value="true"/>
		    <Setter Property="IsTabStop" Value="false"/>
		    <Setter Property="Focusable" Value="false"/>
		    <Setter Property="Template">
		      <Setter.Value>
		        <ControlTemplate TargetType="{x:Type Thumb}">
		          <Border 
		            CornerRadius="1" 
		            Background="{TemplateBinding Background}"
		            BorderBrush="{TemplateBinding BorderBrush}"
		            BorderThickness="1" />
		        </ControlTemplate>
		      </Setter.Value>
		    </Setter>
		  </Style>
		  <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		    <Grid >
		      <Grid.RowDefinitions>
		        <RowDefinition MaxHeight="10"/>
		        <RowDefinition Height="0.00001*"/>
		        <RowDefinition MaxHeight="10"/>
		      </Grid.RowDefinitions>
		      <Border
		        Grid.RowSpan="3"
		        CornerRadius="1" 
		        Background="#F0F0F0" />
		      <RepeatButton 
		        Grid.Row="0"                           
		        Style="{DynamicResource ScrollBarLineButton}"
		        Height="10"
		        Command="ScrollBar.LineUpCommand"
		        Content="M 0 2 L 4 2 L 2 0 Z" />
		      <Track 
		        Name="PART_Track"
		        Grid.Row="1"
		        IsDirectionReversed="true">
		        <Track.DecreaseRepeatButton>
		          <RepeatButton 
		            Style="{DynamicResource ScrollBarPageButton}"
		            Command="ScrollBar.PageUpCommand" />
		        </Track.DecreaseRepeatButton>
		        <Track.Thumb>
		          <Thumb 
		            Style="{DynamicResource ScrollBarThumb}" 
		            Margin="1,0,1,0"  
		            Background="{DynamicResource HorizontalNormalBrush}"
		            BorderBrush="{DynamicResource HorizontalNormalBorderBrush}" />
		        </Track.Thumb>
		        <Track.IncreaseRepeatButton>
		          <RepeatButton 
		            Style="{DynamicResource ScrollBarPageButton}"
		            Command="ScrollBar.PageDownCommand" />
		        </Track.IncreaseRepeatButton>
		      </Track>
		      <RepeatButton 
		        Grid.Row="3" 
		        Style="{DynamicResource ScrollBarLineButton}"
		        Height="10"
		        Command="ScrollBar.LineDownCommand"
		        Content="M 0 0 L 2 2 L 4 0 Z"/>
		    </Grid>
		  </ControlTemplate>	
		  <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		    <Grid >
		      <Grid.ColumnDefinitions>
		        <ColumnDefinition MaxWidth="10"/>
		        <ColumnDefinition Width="0.00001*"/>
		        <ColumnDefinition MaxWidth="10"/>
		      </Grid.ColumnDefinitions>
		      <Border
		        Grid.ColumnSpan="3"
		        CornerRadius="1" 
		        Background="#F0F0F0" />
		      <RepeatButton 
		        Grid.Column="0"                           
		        Style="{DynamicResource ScrollBarLineButton}"
		        Width="10"
		        Command="ScrollBar.LineLeftCommand"
		        Content="M 2 0 L 2 4 L 0 2 Z" />
		      <Track 
		        Name="PART_Track"
		        Grid.Column="1"
		        IsDirectionReversed="False">
		        <Track.DecreaseRepeatButton>
		          <RepeatButton 
		            Style="{DynamicResource ScrollBarPageButton}"
		            Command="ScrollBar.PageLeftCommand" />
		        </Track.DecreaseRepeatButton>
		        <Track.Thumb>
		          <Thumb 
		            Style="{DynamicResource ScrollBarThumb}" 
		            Margin="0,1,0,1"  
		            Background="{DynamicResource NormalBrush}"
		            BorderBrush="{DynamicResource NormalBorderBrush}" />
		        </Track.Thumb>
		        <Track.IncreaseRepeatButton>
		          <RepeatButton 
		            Style="{DynamicResource ScrollBarPageButton}"
		            Command="ScrollBar.PageRightCommand" />
		        </Track.IncreaseRepeatButton>
		      </Track>
		      <RepeatButton 
		        Grid.Column="3" 
		        Style="{DynamicResource ScrollBarLineButton}"
		        Width="10"
		        Command="ScrollBar.LineRightCommand"
		        Content="M 0 0 L 2 2 L 0 4 Z"/>
		    </Grid>
		  </ControlTemplate>	
		  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		    <Setter Property="SnapsToDevicePixels" Value="True"/>
		    <Setter Property="OverridesDefaultStyle" Value="true"/>
		    <Style.Triggers>
		      <Trigger Property="Orientation" Value="Horizontal">
		        <Setter Property="Width" Value="Auto"/>
		        <Setter Property="Height" Value="10" />
		        <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
		      </Trigger>
		      <Trigger Property="Orientation" Value="Vertical">
		        <Setter Property="Width" Value="10"/>
		        <Setter Property="Height" Value="Auto" />
		        <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
		      </Trigger>
		    </Style.Triggers>
		  </Style>	
  			
</ResourceDictionary>